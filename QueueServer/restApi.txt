
Используется базовая авторизация по логину и паролю


GET:
/rest/work_station/getElQueue (Возвращает текущую очередь пользователя)
params
- idUser: String

Response
- {'name': 'String',
	'clientsInQueue':'int'}

//////////////////////////////////////////////////////////

/rest/work_station/getStatuses (Возвращает текущий статус, доступные статусы для пользователя, и его окно)
params
- idUser: String

Response
- {'currentStatus':{'name':'String',
					value: String},
	'statuses':['name': 'String',
				'value': 'String'],
	'casement':'int'}

//////////////////////////////////////////////////////////

/rest/work_station/getStatus (Возвращает текущий статус пользователя)
params
- idUser: String

Response
- {'name':'String',
   'value': 'String'}

//////////////////////////////////////////////////////////

/rest/work_station/isTicket (Возвращает идентификатор назначенного талона)
params
- idUser: String

Response
- {'isTicket':'boolean',
   'id':'uuid'}

//////////////////////////////////////////////////////////

/rest/work_station/getTicket (Возвращает данные о талоне)
params
- idTicket: uuid

Response
-  {'id':'uuid',
	'name':'String',
	'status':'String',
	'dateStartService':'05.12.2020 09:22:32',
	'timeOnPause':'long', //Время пребывания в паузе в милисекундах
	'service':'String',
	'contractor':{'id':'String',
				'name':'String'},
	'sellings':['number':'String']}

//////////////////////////////////////////////////////////

/rest/work_station/getTicketsPaused (Возвращает список талонов на паузе у указанного оператора)
params
- idUser: String

Response
-  {['id':'uuid',
	'name':'String',
	'dateStartService':'05.12.2020 09:22:32',
	'service':'String',
	'contractor':{'id':'String',
				'name':'String'},
	'sellings':['number':'String']]}

//////////////////////////////////////////////////////////

/rest/work_station/getAvailableOperators (Возвращает список операторов доступных для перенаправдления талона)
params
- idUser: String

Response
-  {'idUser':'String',
	'fullName':'String',
	'casement':'int'}

//////////////////////////////////////////////////////////

POST:

/rest/work_station/setNewStatus (Устанавливает новый статус у оператора)
Request:
{'idUser':'String',
'valueNewStatus':'String',
'casement':'int'}

Response
-  {'status':'ok'}

//////////////////////////////////////////////////////////

/rest/work_station/startServiceClient (Устанавливает статусы обслуживания клиента у оператора и его текущего талона)
Request:
{'idUser':'String'}

Response
-  {'status':'ok'}

//////////////////////////////////////////////////////////

/rest/work_station/endServiceClient (Устанавливает статусы звершения обслуживания клиента у оператора и его текущего талона)
Request:
{'idUser':'String'}

Response
-  {'status':'ok'}

//////////////////////////////////////////////////////////

/rest/work_station/pauseServiceTicket (Ставит талон на паузу. У оператора статус сохраняется, но можно сменить статус на новые доступные)
Request:
{'idUser':'String'}

Response
-  {'status':'ok'}

//////////////////////////////////////////////////////////

/rest/work_station/resumeServiceTicket (Возвращает талон в работу. У оператора устанавливает стаус обслуживания клиента)
Request:
{'idUser':'String',
'idTicket':'uuid'}

Response
-  {'status':'ok'}

//////////////////////////////////////////////////////////

/rest/work_station/redirectTicket (Направляет талон к назначеному оператору)
Request:
{'idUser':'String',
'idTicket':'uuid',
'idNewOperator':'String'}

Response
-  {'status':'ok'}

//////////////////////////////////////////////////////////

/rest/work_station/createTicketPartner (Создает талон для постоянного клинета. Присваивает в работу к указанному оператору)
Request:
{'idUser':'String'}

Response
-  {'status':'ok',
	'idTicket':'uuid'}

//////////////////////////////////////////////////////////

/rest/work_station/setContractor (Указывает контрагента для талона)
Request:
{'idTicket':'uuid',
'contractor':{'id':'String',
			'name':'String'}}

Response
-  {'status':'ok'}

//////////////////////////////////////////////////////////

/rest/work_station/addSelling (Добавляет квитанцию в указанный талон)
Request:
{'idTicket':'uuid',
'numberSelling':'String'}

Response
-  {'status':'ok'}

//////////////////////////////////////////////////////////